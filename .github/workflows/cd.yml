name: CD

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - 'backend/services/auth/**'
      - '.github/workflows/cd.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: code_racer_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'

      - name: Backend Tests
        working-directory: ./backend
        run: |
          go mod download
          go test -v ./...
        env:
          DB_HOST: localhost
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: code_racer_test
          DB_PORT: 5432
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          JWT_SECRET: test_secret
          JUDGE0_API_KEY: ${{ secrets.JUDGE0_API_KEY }}
          JUDGE0_API_ENDPOINT: ${{ secrets.JUDGE0_API_ENDPOINT }}

  deploy-backend:
    needs: test
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.modified, 'backend/services/auth/') ||
      contains(github.event.head_commit.modified, 'backend/')
    steps:
      - uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker asia-northeast3-docker.pkg.dev --quiet

      - name: Build and Push Docker image
        working-directory: ./backend
        run: |
          docker build -t asia-northeast3-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/code-racer/backend:${{ github.sha }} .
          docker push asia-northeast3-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/code-racer/backend:${{ github.sha }}
          docker tag asia-northeast3-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/code-racer/backend:${{ github.sha }} \
            asia-northeast3-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/code-racer/backend:latest
          docker push asia-northeast3-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/code-racer/backend:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy code-racer \
            --image asia-northeast3-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/code-racer/backend:${{ github.sha }} \
            --region asia-northeast3 \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars="GIN_MODE=release" \
            --set-env-vars="FRONTEND_URL=${{ secrets.FRONTEND_URL }}" \
            --set-env-vars="FRONTEND_DOMAIN=${{ secrets.FRONTEND_DOMAIN }}" \
            --set-env-vars="DB_HOST=${{ secrets.DB_HOST }}" \
            --set-env-vars="DB_USER=${{ secrets.DB_USER }}" \
            --set-env-vars="DB_PASSWORD=${{ secrets.DB_PASSWORD }}" \
            --set-env-vars="DB_NAME=${{ secrets.DB_NAME }}" \
            --set-env-vars="DB_PORT=${{ secrets.DB_PORT }}" \
            --set-env-vars="REDIS_HOST=${{ secrets.REDIS_HOST }}" \
            --set-env-vars="REDIS_PORT=${{ secrets.REDIS_PORT }}" \
            --set-env-vars="REDIS_USERNAME=${{ secrets.REDIS_USERNAME }}" \
            --set-env-vars="REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" \
            --set-env-vars="JWT_SECRET=${{ secrets.JWT_SECRET }}" \
            --set-env-vars="GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" \
            --set-env-vars="GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" \
            --set-env-vars="GOOGLE_REDIRECT_URL=${{ secrets.GOOGLE_REDIRECT_URL }}" \
            --set-env-vars="GH_CLIENT_ID=${{ secrets.GH_CLIENT_ID }}" \
            --set-env-vars="GH_CLIENT_SECRET=${{ secrets.GH_CLIENT_SECRET }}" \
            --set-env-vars="JUDGE0_API_KEY=${{ secrets.JUDGE0_API_KEY }}" \
            --set-env-vars="JUDGE0_API_ENDPOINT=${{ secrets.JUDGE0_API_ENDPOINT }}" \
            --set-env-vars="GH_REDIRECT_URL=${{ secrets.GH_REDIRECT_URL }}"
